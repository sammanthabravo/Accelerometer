ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x1d31
  Start of program headers:          52 (bytes into file)
  Start of section headers:          1026052 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         37
  Section header string table index: 36

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000100 000100 00  AX  0   0  4
  [ 2] text              PROGBITS        00000100 000200 00939c 00  AX  0   0  8
  [ 3] .ARM.exidx        ARM_EXIDX       0000949c 00959c 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        000094a4 0095a4 000088 00   A  0   0  4
  [ 5] device_area       PROGBITS        0000952c 00962c 000140 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        0000966c 00976c 000180 00   A  0   0  4
  [ 7] _static_thre[...] PROGBITS        000097f0 0098f0 000030 00  WA  0   0  8
  [ 8] gpio_driver_[...] PROGBITS        00009820 009920 000024 00   A  0   0  4
  [ 9] i2c_driver_a[...] PROGBITS        00009844 009944 000018 00   A  0   0  4
  [10] sensor_drive[...] PROGBITS        0000985c 00995c 000054 00   A  0   0  4
  [11] clock_contro[...] PROGBITS        000098b0 0099b0 00001c 00   A  0   0  4
  [12] display_driv[...] PROGBITS        000098cc 0099cc 00002c 00   A  0   0  4
  [13] uart_driver_[...] PROGBITS        000098f8 0099f8 00000c 00   A  0   0  4
  [14] tbss              NOBITS          00009904 009a04 000004 00 WAT  0   0  4
  [15] rodata            PROGBITS        00009910 009a10 000d24 00   A  0   0 16
  [16] .ramfunc          PROGBITS        20000000 00a82c 000000 00   W  0   0  1
  [17] datas             PROGBITS        20000000 00a738 000076 00  WA  0   0  4
  [18] device_states     PROGBITS        20000076 00a7ae 000016 00  WA  0   0  1
  [19] k_timer_area      PROGBITS        20000090 00a7c8 000038 00  WA  0   0  8
  [20] k_msgq_area       PROGBITS        200000c8 00a800 000028 00  WA  0   0  4
  [21] .comment          PROGBITS        00000000 00a82c 000020 01  MS  0   0  1
  [22] .debug_aranges    PROGBITS        00000000 00a850 001948 00      0   0  8
  [23] .debug_info       PROGBITS        00000000 00c198 05faae 00      0   0  1
  [24] .debug_abbrev     PROGBITS        00000000 06bc46 00f9cc 00      0   0  1
  [25] .debug_line       PROGBITS        00000000 07b612 027ec7 00      0   0  1
  [26] .debug_frame      PROGBITS        00000000 0a34dc 0043f8 00      0   0  4
  [27] .debug_str        PROGBITS        00000000 0a78d4 00ef67 01  MS  0   0  1
  [28] .debug_loc        PROGBITS        00000000 0b683b 02c536 00      0   0  1
  [29] .debug_ranges     PROGBITS        00000000 0e2d78 0069c8 00      0   0  8
  [30] .ARM.attributes   ARM_ATTRIBUTES  00000000 0e9740 000032 00      0   0  1
  [31] .last_section     PROGBITS        0000a724 00a828 000004 00  WA  0   0  4
  [32] bss               NOBITS          200000f0 00a830 0005fd 00  WA  0   0  8
  [33] noinit            NOBITS          200006f0 00a830 001600 00  WA  0   0  8
  [34] .symtab           SYMTAB          00000000 0e9774 009050 10     35 1236  4
  [35] .strtab           STRTAB          00000000 0f27c4 007e6c 00      0   0  1
  [36] .shstrtab         STRTAB          00000000 0fa630 0001d2 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x00959c 0x0000949c 0x0000949c 0x00008 0x00008 R   0x4
  LOAD           0x000100 0x00000000 0x00000000 0x0a634 0x0a634 RWE 0x10
  LOAD           0x00a738 0x20000000 0x0000a634 0x000f0 0x000f0 RW  0x8
  LOAD           0x00a828 0x0000a724 0x0000a724 0x00004 0x00004 RW  0x4
  LOAD           0x000000 0x200000f0 0x200000f0 0x00000 0x01c00 RW  0x8
  TLS            0x009a04 0x00009904 0x00009904 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table _static_thread_data_area gpio_driver_api_area i2c_driver_api_area sensor_driver_api_area clock_control_driver_api_area display_driver_api_area uart_driver_api_area rodata 
   02     datas device_states k_timer_area k_msgq_area 
   03     .last_section 
   04     bss noinit 
   05     tbss 
